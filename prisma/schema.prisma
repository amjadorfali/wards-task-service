generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  subId       String
  teams       Team[]
  phoneNumber String
  email       String
  Incident    Incident[]
}

model Team {
  id            Int           @id @default(autoincrement())
  name          String
  users         User[]
  HealthCheck   HealthCheck[]
  healthCheckId String?
  Incident      Incident[]
}

model Incident {
  id            Int            @id @default(autoincrement())
  status        IncidentStatus
  startedAt     DateTime
  cause         String
  assignedUser  User?          @relation(fields: [userId], references: [id])
  team          Team           @relation(fields: [teamId], references: [id])
  healthCheck   HealthCheck    @relation(fields: [healthCheckId], references: [id])
  userId        Int?
  teamId        Int
  healthCheckId String
}

model HealthCheck {
  id          String          @id @default(uuid())
  name        String
  method      Method
  timeout     Int?
  verifySSL   Boolean         @default(false)
  enabled     Boolean
  type        HealthCheckType
  inProgress  Boolean
  interval    Interval
  lastChecked DateTime
  url         String
  locations   Location[]
  assertions  Assertion[]
  headers     Header[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  team        Team            @relation(fields: [teamId], references: [id])
  teamId      Int
  incidents   Incident[]

  @@unique([teamId, name])
}

model Assertion {
  id            Int           @id @default(autoincrement())
  type          AssertionType
  key           String
  value         String
  compareType   CompareType
  healthCheck   HealthCheck?  @relation(fields: [healthCheckId], references: [id], onDelete: Cascade)
  healthCheckId String?
}

enum CompareType {
  SMALL
  BIG
  SMALL_EQUAL
  BIG_EQUAL
  DOES_NOT_CONTAIN
  EQUAL
  NOT_EQUAL
}

model Header {
  id            Int          @id @default(autoincrement())
  type          String
  value         String
  healthCheckId String?
  HealthCheck   HealthCheck? @relation(fields: [healthCheckId], references: [id], onDelete: Cascade)
}

enum Location {
  FRANKFURT
  IRELAND
  CALIFORNIA
  DUBAI
  OHIO
  STOCKHOLM
  SINGAPORE
  SYDNEY
  SAO_PAULO
}

enum Method {
  GET
  POST
  PUT
  PATCH
  HEAD
}

enum HealthCheckType {
  SWITCH
  HTTP
  BROWSER
  TCP
  UDP
}

enum AssertionType {
  RESPONSE_TIME
  RESPONSE_CODE
  RESPONSE_BODY
  RESPONSE_JSON
  RESPONSE_HEADER
  SSL_SERTIFICATE_EXPIRES_IN
}

enum Roles {
  OWNER
  MODERATOR
  COMMENTER
  READER
}

enum IncidentStatus {
  ONGOING
  RESOLVED
  ACKNOWLEDGED
}
enum Interval {
  SECOND_30
  SECOND_45
  MINUTE_1
  MINUTE_2
  MINUTE_3
  MINUTE_5
  MINUTE_10
  MINUTE_15
  MINUTE_30
}
