generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HealthCheck {
  id          String         @id @default(uuid())
  userId      String
  name        String
  method      Method
  timeout     Int?
  verifySSL   Boolean        @default(false)
  enabled     Boolean
  type        HealtCheckType
  inProgress  Boolean
  interval    Int?
  lastChecked DateTime
  url         String
  locations   Location[]
  assertions  Assertion[]
  headers     Header[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@unique([userId, name])
}

model Assertion {
  id            Int           @id @default(autoincrement())
  type          AssertionType
  key           String
  value         String
  compareType   CompareType
  HealthCheck   HealthCheck?  @relation(fields: [healthCheckId], references: [id], onDelete: Cascade)
  healthCheckId String?
}

enum CompareType {
  SMALL
  BIG
  SMALL_EQUAL
  BIG_EQUAL
  DOES_NOT_CONTAIN
  EQUAL
  NOT_EQUAL
}

model Header {
  id            Int          @id @default(autoincrement())
  type          String
  value         String
  healthCheckId String?
  HealthCheck   HealthCheck? @relation(fields: [healthCheckId], references: [id], onDelete: Cascade)
}

enum Location {
  FRANKFURT
  IRELAND
  CALIFORNIA
  DUBAI
  OHIO
  STOCKHOLM
  SINGAPORE
  SYDNEY
  SAO_PAULO
}

enum Method {
  GET
  POST
  PUT
  PATCH
  HEAD
}

enum HealtCheckType {
  SWITCH
  HTTP
  BROWSER
  TCP
  UDP
}

enum AssertionType {
  RESPONSE_TIME
  RESPONSE_CODE
  RESPONSE_BODY
  RESPONSE_JSON
  RESPONSE_HEADER
  SSL_SERTIFICATE_EXPIRES_IN
}
